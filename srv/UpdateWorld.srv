# Request

# Some constants to fill the field operation
uint8 UNDEFINED=0

# Adds body to world at 'pose' and attaches it to 'parent_link'. 
# If 'parent_link' is not set, it will be attached to the root link of the world, e.g. map.
# add group of name 'body.name'
uint8 ADD=1

# Remove group named 'body.name' from the world.
# Will also remove attached objects.
uint8 REMOVE=2

# Clears the world and reloads the robot cached from the parameter server.
uint8 REMOVE_ALL=4

# If 'body.name' doesn't exist: calls ADD.
# If 'body.name' exists: attaches body to 'parent_link'.
uint8 ATTACH=6

# If 'body.name' exists: sets 'parent_link' to root link of the world, e.g. map, and calls ATTACH.
uint8 DETACH=5

# Type of operation that shall be performed on the world representation
uint8 operation

# new behavior! you can't modify world during planning and make two changes at the same time
# If the request didn't get accepted during this time, it will be rejected and BUSY is returned.
# This will happen if Giskard is planning/executing, while the service is being called.
float64 timeout

# Description of the body that shall be added to/removed from/altered within the world.
# defaults to root link of world
giskard_msgs/WorldBody body

# Name of any link known to the world.
string parent_link

# Pose where new bodies will be spawned.
geometry_msgs/PoseStamped pose

# If this is set, Giskard will use this frame to track localization of the object.
string tf_root_link_name
---
# Response

# constants to use as error codes
uint8 SUCCESS=0
uint8 ERROR=1
uint8 MISSING_BODY_ERROR=10
uint8 DUPLICATE_BODY_ERROR=11
uint8 CORRUPT_SHAPE_ERROR=12
uint8 CORRUPT_MESH_ERROR=13
uint8 CORRUPT_URDF_ERROR=14
uint8 MISSING_LINK_ERROR=15
uint8 TF_ERROR=20
uint8 INVALID_OPERATION=30
uint8 UNSUPPORTED_OPTIONS=40
uint8 BUSY=50

# errors that occurred during the service
uint8 error_codes

# optional additional error message
string error_msg
